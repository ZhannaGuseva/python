apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appName }}      
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate 	  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName }}        
    spec:
      containers:
        - name: python-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            {{- if eq .Values.namespace.name "dev" }}
            - name: SECRET_USER
              valueFrom:
                secretKeyRef:
                  name: dev-user
                  key: username
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dev-user
                  key: password
            {{- else if eq .Values.namespace.name "prod" }}
            - name: SECRET_USER
              valueFrom:
                secretKeyRef:
                  name: prod-user
                  key: username
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: prod-user
                  key: password
            {{- end }}    
